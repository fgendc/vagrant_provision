# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.synced_folder ".", "/vagrant", type: "virtualbox"

  config.vm.define "centos-master" do |d|
    d.vm.box = "centos/7"

    d.vm.network "private_network", ip: "192.168.99.151"
    d.vm.provider "virtualbox" do |v|
      v.memory = 8192
      v.cpus = 2
    end
  end

  config.vm.define "centos-node" do |d|
    d.vm.box = "centos/7"
    d.vm.network "private_network", ip: "192.168.99.152"
    d.vm.provider "virtualbox" do |v|
      v.memory = 4096
      v.cpus = 1
    end
  end


  config.vm.define "openshift" do |d|
    d.vm.box = "iamseth/rhel-7.3"
    d.vm.box_version = "1.0.0"
    d.vm.network "private_network", ip: "192.168.99.201"
    d.vm.provider "virtualbox" do |v|        
      v.memory = 4096 
    end
  end
  config.vm.define "ubuntu_16" do |d|
    d.vm.box = "ubuntu/xenial64"
    d.vm.network "private_network", type: "dhcp"
    d.vm.network "forwarded_port", guest: 8080, host: 8280
    d.vm.provider "virtualbox" do |v|        
      v.memory = 4096
    end
  end

  config.vm.define "ubuntu14_gui" do |d|
    d.vm.box = "ubuntu/trusty64"
    d.vm.network "private_network", type: "dhcp"
    d.vm.network "forwarded_port", guest: 8080, host: 8280
    d.vm.provision "shell", inline: "sudo apt-get update"
    d.vm.provision "shell", inline: "sudo apt-get install -y xfce4 virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11"
    d.vm.provision "shell", inline: "sudo sed -i 's/allowed_users=.*$/allowed_users=anybody/' /etc/X11/Xwrapper.config"
    d.vm.provider "virtualbox" do |v|        
      v.memory = 4096
      v.gui=true
    end
  end

  config.vm.define "ubuntu_14" do |d|
    d.vm.box = "ubuntu/trusty64"
    d.vm.network "private_network", type: "dhcp"
    d.vm.network "forwarded_port", guest: 8080, host: 8180
    #sobreescribe el forward automatico de ssh con el id: "ssh"
    d.vm.network :forwarded_port, guest: 22, host: 2322, id: "ssh"
    d.vm.provision :shell, path: "scripts/bootstrap.sh"
    d.vm.provision :shell, inline: "PYTHONUNBUFFERED=1 ansible-playbook /vagrant/ansible/oracle_java.yml -c local"
    d.vm.provider "virtualbox" do |v|        
      #v.memory = 6144
      v.memory = 2048
    end
  end
  config.vm.define "ubuntu_14_2" do |d|
    d.vm.box = "ubuntu/trusty64"
    d.vm.network "private_network", type: "dhcp"
    d.vm.network "forwarded_port", guest: 8080, host: 8180
    #sobreescribe el forward automatico de ssh con el id: "ssh"
    d.vm.network :forwarded_port, guest: 22, host: 2322, id: "ssh"
    d.vm.provision :shell, path: "scripts/bootstrap.sh"
    d.vm.provision :shell, inline: "PYTHONUNBUFFERED=1 ansible-playbook /vagrant/ansible/oracle_java.yml -c local"
    d.vm.provider "virtualbox" do |v|        
      #v.memory = 6144
      v.memory = 2048
    end
  end

  config.vm.define "ubuntu_test" do |d|
    d.vm.box = "ubuntu/xenial64"
    d.vm.network "private_network", type: "dhcp"
    d.vm.provision :shell, path: "scripts/bootstrap.sh"
    d.vm.network "forwarded_port", guest: 8081, host: 8082
    d.vm.provision :shell, inline: "PYTHONUNBUFFERED=1 ansible-playbook /vagrant/ansible/oracle_java.yml -c local"
    d.vm.provider "virtualbox" do |v|        
      v.memory = 2048
    end
  end

  $script = <<-SCRIPT
  # Install kubernetes
  curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  chmod +x ./kubectl
  sudo mv ./kubectl /usr/local/bin/kubectl
  
  curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/

  SCRIPT

  config.vm.define "kubernetes" do |d|
    d.vm.box = "bento/ubuntu-16.04"
    d.vm.provision "docker"
    d.vm.provision "shell", inline: $script
    d.vm.network "private_network", ip: "192.168.99.200"
    d.vm.provider "virtualbox" do |v|        
      v.memory = 4098
    end
  end

  config.vm.define "ubuntu_docker" do |d|
    d.vm.box = "ubuntu/xenial64"
    d.vm.network "private_network", ip: "192.168.99.201"
#    d.vm.network "forwarded_port", guest: 8080, host: 8080
#    d.vm.network "forwarded_port", guest: 8081, host: 8081
#    d.vm.network "forwarded_port", guest: 5000, host: 5000
#    d.vm.network "forwarded_port", guest: 80, host: 80
    d.vm.provision :shell, path: "scripts/bootstrap.sh"
    d.vm.provision :shell, inline: "PYTHONUNBUFFERED=1 ansible-playbook /vagrant/ansible/docker.yml -c local"
    #d.vm.provision :shell, inline: "docker run "
    d.vm.provider "virtualbox" do |v|        
      v.memory = 1024
    end
  end

  config.vm.define "swarm-1" do |d|
    d.vm.box = "ubuntu/xenial64"
    d.vm.network "private_network", ip: "192.168.99.201"
#    d.vm.network "forwarded_port", guest: 8080, host: 8080
#    d.vm.network "forwarded_port", guest: 8081, host: 8081
#    d.vm.network "forwarded_port", guest: 5000, host: 5000
#    d.vm.network "forwarded_port", guest: 80, host: 80
    d.vm.provision :shell, path: "scripts/bootstrap.sh"
    d.vm.provision :shell, inline: "PYTHONUNBUFFERED=1 ansible-playbook /vagrant/ansible/docker.yml -c local"
    #d.vm.provision :shell, inline: "docker run "
    d.vm.provider "virtualbox" do |v|        
      v.memory = 1024
    end
  end

end
